/*
 * This file is generated by jOOQ.
*/
package com.franckyi.modcenter.api.jooq.tables;


import com.franckyi.modcenter.api.jooq.ModCenterDatabase;
import com.franckyi.modcenter.api.jooq.Keys;
import com.franckyi.modcenter.api.jooq.tables.records.RequiredlibrariesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Requiredlibraries extends TableImpl<RequiredlibrariesRecord> {

    private static final long serialVersionUID = -947869409;

    /**
     * The reference instance of <code>franckyi_modcenter.requiredLibraries</code>
     */
    public static final Requiredlibraries REQUIREDLIBRARIES = new Requiredlibraries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RequiredlibrariesRecord> getRecordType() {
        return RequiredlibrariesRecord.class;
    }

    /**
     * The column <code>franckyi_modcenter.requiredLibraries.fileId</code>.
     */
    public final TableField<RequiredlibrariesRecord, Integer> FILEID = createField("fileId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>franckyi_modcenter.requiredLibraries.projectId</code>.
     */
    public final TableField<RequiredlibrariesRecord, Integer> PROJECTID = createField("projectId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>franckyi_modcenter.requiredLibraries</code> table reference
     */
    public Requiredlibraries() {
        this("requiredLibraries", null);
    }

    /**
     * Create an aliased <code>franckyi_modcenter.requiredLibraries</code> table reference
     */
    public Requiredlibraries(String alias) {
        this(alias, REQUIREDLIBRARIES);
    }

    private Requiredlibraries(String alias, Table<RequiredlibrariesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Requiredlibraries(String alias, Table<RequiredlibrariesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ModCenterDatabase.MOD_CENTER_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RequiredlibrariesRecord> getPrimaryKey() {
        return Keys.KEY_REQUIREDLIBRARIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RequiredlibrariesRecord>> getKeys() {
        return Arrays.<UniqueKey<RequiredlibrariesRecord>>asList(Keys.KEY_REQUIREDLIBRARIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RequiredlibrariesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RequiredlibrariesRecord, ?>>asList(Keys.REQUIREDLIBRARIES_IBFK_1, Keys.REQUIREDLIBRARIES_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Requiredlibraries as(String alias) {
        return new Requiredlibraries(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Requiredlibraries rename(String name) {
        return new Requiredlibraries(name, null);
    }
}
