/*
 * This file is generated by jOOQ.
*/
package com.franckyi.modcenter.api.jooq.tables.records;


import com.franckyi.modcenter.api.jooq.tables.Versions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VersionsRecord extends UpdatableRecordImpl<VersionsRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 78202833;

    /**
     * Setter for <code>modcenter.versions.fileId</code>.
     */
    public void setFileid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modcenter.versions.fileId</code>.
     */
    public Integer getFileid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modcenter.versions.version</code>.
     */
    public void setVersion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>modcenter.versions.version</code>.
     */
    public String getVersion() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Versions.VERSIONS.FILEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Versions.VERSIONS.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFileid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionsRecord value1(Integer value) {
        setFileid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionsRecord value2(String value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionsRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VersionsRecord
     */
    public VersionsRecord() {
        super(Versions.VERSIONS);
    }

    /**
     * Create a detached, initialised VersionsRecord
     */
    public VersionsRecord(Integer fileid, String version) {
        super(Versions.VERSIONS);

        set(0, fileid);
        set(1, version);
    }
}
