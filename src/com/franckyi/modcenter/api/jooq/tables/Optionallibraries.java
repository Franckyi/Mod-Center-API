/*
 * This file is generated by jOOQ.
*/
package com.franckyi.modcenter.api.jooq.tables;


import com.franckyi.modcenter.api.jooq.ModCenterDatabase;
import com.franckyi.modcenter.api.jooq.Keys;
import com.franckyi.modcenter.api.jooq.tables.records.OptionallibrariesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Optionallibraries extends TableImpl<OptionallibrariesRecord> {

    private static final long serialVersionUID = -1886306555;

    /**
     * The reference instance of <code>franckyi_modcenter.optionalLibraries</code>
     */
    public static final Optionallibraries OPTIONALLIBRARIES = new Optionallibraries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OptionallibrariesRecord> getRecordType() {
        return OptionallibrariesRecord.class;
    }

    /**
     * The column <code>franckyi_modcenter.optionalLibraries.fileId</code>.
     */
    public final TableField<OptionallibrariesRecord, Integer> FILEID = createField("fileId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>franckyi_modcenter.optionalLibraries.projectId</code>.
     */
    public final TableField<OptionallibrariesRecord, Integer> PROJECTID = createField("projectId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>franckyi_modcenter.optionalLibraries</code> table reference
     */
    public Optionallibraries() {
        this("optionalLibraries", null);
    }

    /**
     * Create an aliased <code>franckyi_modcenter.optionalLibraries</code> table reference
     */
    public Optionallibraries(String alias) {
        this(alias, OPTIONALLIBRARIES);
    }

    private Optionallibraries(String alias, Table<OptionallibrariesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Optionallibraries(String alias, Table<OptionallibrariesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ModCenterDatabase.MOD_CENTER_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OptionallibrariesRecord> getPrimaryKey() {
        return Keys.KEY_OPTIONALLIBRARIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OptionallibrariesRecord>> getKeys() {
        return Arrays.<UniqueKey<OptionallibrariesRecord>>asList(Keys.KEY_OPTIONALLIBRARIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OptionallibrariesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OptionallibrariesRecord, ?>>asList(Keys.OPTIONALLIBRARIES_IBFK_1, Keys.OPTIONALLIBRARIES_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Optionallibraries as(String alias) {
        return new Optionallibraries(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Optionallibraries rename(String name) {
        return new Optionallibraries(name, null);
    }
}
